[api] manage task list structure internally

The task list data model is dag of objects of type AbstractTaskContainer and its subclasses. While the presentation (task list view) is meant to be extensible the primary data model and its structure is managed in the task list. The task list exposes methods such add addTask() and moveTask() to manipulate the structure but ensures that certain invariants hold when modifications are executed (e.g. no cycles, local tasks only have one parent). It also guarantees thread-safety if these methods are invoked concurrently.

AbstractTaskContainer is currently part of the public API and connectors need to extend it to add tasks to the task list. Most connectors overwrite very few methods and store very little custom state on tasks objects. Since the task class is primarily intended as a data container it does not implement any behavior. This API can be slightly  confusing to clients since it requires implementation overhead such as implementing a factory or management of task life-cycle without getting the benefits of inheritance, i.e. modification of behavior. 

In addition AbstractTaskContainer and AbstractTask have methods that are prefixed with "internal" and are not intended to be invoked by clients. Still these methods are part of the public API and there is slight risk that a client could corrupt the task list model by invoking these methods.

In order to separate the concerns of the primary data model and the presentation better, to simplify the intended extensibility and to better guard against undesired structural changes the management of task objects should entirely handled by the task list. All objects that are part of the task list should be constructed through the task list and their life cycle should be managed in the task list. Only interfaces should be exposed to clients that allow limited extensibility, e.g. by allowing clients to store key/value pairs of Strings on task list elements. All changes to a task and to the task list structure should be properly synchronized and change notifications sent through the task list.